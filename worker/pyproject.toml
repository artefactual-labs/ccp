[project]
name = "worker"
version = "0.1.0"
requires-python = ">=3.12"
dependencies = [
    "Django>=4.2,<5",
    "agentarchives>=0.9.0",
    "ammcpc>=0.2.0",
    "bagit",
    "clamd>=1.0.2",
    "django-autoslug>=1.9.9",
    "django-tastypie>=0.14.7",
    "gearman3",
    "lxml>=5.3.0",
    "metsrw>=0.5.1",
    "orjson>=3.10.7",
    "opf-fido",
    "prometheus_client>=0.20.0",
    "requests>=2.32.3",
    "unidecode>=1.3.8",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
worker = "worker.__main__:main"

[tool.uv]
dev-dependencies = [
    "coverage[toml]>=7.6.1",
    "pytest>=8.2.2",
    "pytest-cov>=5.0.0",
    "pytest-django>=4.8.0",
    "pytest-mock>=3.14.0",
    "pytest-randomly>=3.15.0",
]

[tool.uv.sources]
bagit = { git = "https://github.com/artefactual-labs/bagit-python", rev = "902051d8410219f6c5f4ce6d43e5b272cf29e89b" }
gearman3 = { git = "https://github.com/artefactual-labs/python-gearman.git", rev = "b68efc868c7a494dd6a2d2e820fb098a6da9f797" }
opf-fido = { git = "https://github.com/artefactual-labs/fido.git", rev = "564ceb8018a8650fe931cf20e6780ee008e60fca" }

[tool.setuptools.packages.find]
include = ["worker.*"]

[tool.pytest.ini_options]
addopts = "--reuse-db -p no:cacheprovider"
DJANGO_SETTINGS_MODULE = "settings.test"

[tool.coverage.run]
omit = [
    "**/worker/externals/*",
    "**/migrations/*",
    "**/management/commands/*",
    "**/settings/*",
    "**/tests/*",
    "**/wsgi.py",
    "**/manage.py",
]
include = [
    "**/worker/*",
]
branch = true

[tool.ruff.lint]
# Rule reference: https://docs.astral.sh/ruff/rules/
select = [
    "B",
    "C4",
    "E",
    "F",
    "I",
    "UP",
    "W",
]
ignore = [
    "B018",
    "B904",
    "E402",
    "E501",
    "UP031",
]

[tool.ruff.lint.per-file-ignores]
"settings/*" = ["F403"]

[tool.ruff.lint.isort]
force-single-line = true

[tool.mypy]
ignore_missing_imports = true
explicit_package_bases = true
warn_redundant_casts = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = [
    "worker.client.*",
    "worker.clientScripts.characterize_file",
    "worker.clientScripts.has_packages",
    "worker.clientScripts.identify_file_format",
    "worker.clientScripts.normalize",
    "worker.clientScripts.policy_check",
    "worker.clientScripts.transcribe_file",
    "worker.clientScripts.validate_file",
    "tests.conftest",
    "tests.test_characterize_file",
    "tests.test_has_packages",
    "tests.test_identify_file_format",
    "tests.test_normalize",
    "tests.test_policy_check",
    "tests.test_transcribe_file",
    "tests.test_validate_file",
]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_reexport = true
strict_equality = true
warn_return_any = true
warn_unused_ignores = true
