[tool.pytest.ini_options]
addopts = "--reuse-db -p no:cacheprovider"
DJANGO_SETTINGS_MODULE="settings.test"
norecursedirs = ".svn _build tmp* node_modules bower_components share .tox"

[tool.coverage.run]
omit = [
    "**/worker/externals/*",
    "**/migrations/*",
    "**/management/commands/*",
    "**/settings/*",
    "**/tests/*",
    "**/wsgi.py",
    "**/manage.py",
]
include = [
    "**/worker/*",
]
branch = true

[tool.ruff.lint]
# Rule reference: https://docs.astral.sh/ruff/rules/
select = [
    "B",
    "C4",
    "E",
    "F",
    "I",
    "UP",
    "W",
]
ignore = [
    "B018",
    "B904",
    "E402",
    "E501",
    "E731", # do i still need this?
    "UP031",
]

[tool.ruff.lint.per-file-ignores]
"settings/*" = ["F403"]

[tool.ruff.lint.isort]
force-single-line = true

[tool.mypy]
ignore_missing_imports = true
explicit_package_bases = true
warn_redundant_casts = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = [
    "worker.client.*",
    "worker.clientScripts.identify_file_format",
    "worker.clientScripts.normalize",
    "worker.clientScripts.policy_check",
    "worker.clientScripts.validate_file",
    "tests.conftest",
    "tests.test_identify_file_format",
    "tests.test_normalize",
    "tests.test_policy_check",
    "tests.test_validate_file",
]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_reexport = true
strict_equality = true
warn_return_any = true
warn_unused_ignores = true

[tool.tox]
legacy_tox_ini = """
    [tox]
    skipsdist = True
    envlist =
        worker
        migrations
        linting

    [testenv]
    skip_install = True
    deps = -r{toxinidir}/requirements/requirements-dev.txt
    commands = py.test {posargs}
    allowlist_externals =
        bash
        find
    setenv =
        LOGNAME = user
        DJANGO_SETTINGS_MODULE = {env:DJANGO_SETTINGS_MODULE:settings.test}
        PYTEST_ADDOPTS = {env:PYTEST_ADDOPTS:}
        # Setting HOME prevents Python's pwd module to ask for a real uid inside
        # the container, and using {temp_dir} allows caching the pre-commit
        # dependencies in the tox host
        linting: HOME = {temp_dir}/user

    [testenv:migrations]
    commands = django-admin makemigrations --check --dry-run

    [testenv:linting]
    basepython = python3
    deps = pre-commit
    commands = pre-commit run --all-files --show-diff-on-failure
"""
